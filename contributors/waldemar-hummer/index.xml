<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Waldemar Hummer on LocalStack</title><link>https://localstack.cloud/contributors/waldemar-hummer/</link><description>Recent content in Waldemar Hummer on LocalStack</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 26 Sep 2022 11:31:19 +0530</lastBuildDate><atom:link href="https://localstack.cloud/contributors/waldemar-hummer/index.xml" rel="self" type="application/rss+xml"/><item><title>Cloud Pods - Enabling state sharing and team collaboration for local cloud development</title><link>https://localstack.cloud/blog/2022-08-26-cloud-pods/</link><pubDate>Fri, 26 Aug 2022 00:00:00 +0000</pubDate><guid>https://localstack.cloud/blog/2022-08-26-cloud-pods/</guid><description>ðŸ“¢ Cloud Pods have seen a lot of improvements since this blog post was published. We have deprecated the commit and inject commands in favour of the new save and load commands. We have also made Cloud Pods available to our Community &amp;amp; Pro users. For more information, please refer to our documentation. Background: Ephemeral and persistent state in LocalStack By default, the state of all services in LocalStack is ephemeral - i.</description></item><item><title>LocalStack x Gitpod - Run cloud applications with LocalStack and Gitpod</title><link>https://localstack.cloud/blog/2022-09-26-localstack-x-gitpod-run-cloud-applications-with-localstack-and-gitpod/</link><pubDate>Mon, 26 Sep 2022 11:31:19 +0530</pubDate><guid>https://localstack.cloud/blog/2022-09-26-localstack-x-gitpod-run-cloud-applications-with-localstack-and-gitpod/</guid><description>Shipping applications to production requires them to be battle-tested in the dev environment. The dev environment should mimic the production environment as closely as possible. This comes with a cost: testing cloud applications is cumbersome as they have many moving parts. For instance, if you build a simple Lambda function in AWS, you might use services such as CloudWatch, S3, IAM, etc.
Imagine configuring your project and provisioning these cloud resources in a test environment every time for developing new features.</description></item></channel></rss>